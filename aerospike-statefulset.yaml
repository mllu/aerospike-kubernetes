# ------------------------------------------------------------------------------
# Copyright 2012-2017 Aerospike, Inc.
#
# Portions may be licensed to Aerospike, Inc. under one or more contributor
# license agreements.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
# ------------------------------------------------------------------------------
# Headless service to provide DNS lookup
apiVersion: v1
kind: Service
metadata:
  annotations:
    # Required anootation so that an empty DNS record is created (instead of being unresolvable)
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: aerospike
  labels:
      app: aerospike-server
spec:
  ports:
  - port: 3000
    name: aerospike-client
  # *.aerospike.default.svc.cluster.local
  clusterIP: None
  selector:
    # Tells which pods are part of the DNS record
    app: aerospike
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: aerospike
spec:
  serviceName: "aerospike"
  replicas: 3
  template:
    metadata:
      labels:
        app: aerospike
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
      - name: install
        image: <YOUR_DOCKER_REGISTRY>/aerospike-install
        volumeMounts:
        - name: confdir
          mountPath: /etc/aerospike
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      containers:
      - name: aerospike
        image: aerospike/aerospike-server
        ports:
        - containerPort: 3000
          name: aero-clients
        - containerPort: 3002
          name: aero-mesh
        - containerPort: 3003
          name: aero-info
        readinessProbe:
          tcpSocket:
              port: 3000
          initialDelaySeconds: 15
          timeoutSeconds: 1
        volumeMounts: 
        - name: confdir
          mountPath: /etc/aerospike
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      volumes:
      - name: confdir
        emptyDir: {}
